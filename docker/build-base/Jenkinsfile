pipeline {
    agent any 
    stages {
        stage('Build') {
            steps {
               sh '''
                CHECK_CHANGE=`git diff HEAD HEAD^ --stat`
                echo $CHECK_CHANGE;
                cd ./docker/build-base
                lastest_version=`sha1sum ./Dockerfile | awk '{ print $1 }'| cut -c1-8`
                VERSION=`cat ./VERSION`

                if [ "$lastest_version" != "$VERSION" ]; then
                    ./build.sh alpine;
                    docker push docker-reg.emotibot.com:55688/go-build:$lastest_version-alpine
                fi
                ret=$?
                echo "Result: $ret"
                if [[ $ret -eq 0 ]]; then
                    status="SUCCESS"
                else
                status="FAIL"
                fi
                echo "BUILD $status with commit `git rev-parse --short HEAD` in go-build";
                '''
            }
        }
    }
}