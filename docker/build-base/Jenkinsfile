pipeline {
    agent any 
    stages {
        stage('Build') {
            steps {
               sh '''
                CHECK_CHANGE=`git diff HEAD HEAD^ --stat`
                echo $CHECK_CHANGE;
                cd ./docker/build-base
                if [[ $CHECK_CHANGE = *"/docker/build-base/Dockerfile" ]]; then
                    ./build.sh alpine;
                    VERSION=`cat ./VERSION`
                    docker push docker-reg.emotibot.com:55688/go-build:$VERSION-alpine
                fi
                ret=$?
                echo "Result: $ret"
                if [[ $ret -eq 0 ]]; then
                    status="SUCCESS"
                else
                status="FAIL"
                fi
                echo "BUILD $status with commit `git rev-parse --short HEAD` in go-build";
                '''
            }
        }
    }
}