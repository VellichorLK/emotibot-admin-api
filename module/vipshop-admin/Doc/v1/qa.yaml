openapi: 3.0.0
info:
  description: This is api document page for FAQ RestAPIs
  version: 1.0.0
  title: FAQ
  contact:
    email: kenchang@emotibot.com
tags:
  - name: questions
    description: get questions and answers of the questions
  - name: question
    description: get single question and answers of the question
  - name: category
    description: category related api
  - name: operations
    description: 'QA related operation(Import, Export, etc...)'
components:
  schemas:
    RFQuestion:
      type: object
      description: RemovedFeedback Question, 不顯示解決未解決的標準問, 如果問題為失效問題, id & categoryId 為0
      properties:
        id:
          type: integer
          description: question id
        categoryId:
          $ref: '#/components/schemas/categoryId'
        content:
          type: string
          description: 標準問問題
        isValid:
          type: boolean
          description: 是否已失效, 如果解决未解决页面的标准问已经不在问答库中存在，则状态为“已失效”。
    categoryId:
      type: integer
      description: questions under which category
    time:
      type: string
      format: date-time
    question:
      type: object
      description: question
      properties:
        categoryId:
          $ref: '#/components/schemas/categoryId'
        categoryName:
          type: string
        content:
          type: string
        questionId:
          type: integer
        similarQuestions:
          type: array
        answers:
          type: array
          items:
            $ref: '#/components/schemas/answer'
    answer:
      type: object
      description: answer
      properties:
        content:
          type: string
        dynamicMenu:
          type: array
          items:
            $ref: '#/components/schemas/extendMenu'
        relativeQuesions:
          type: array
          items:
            $ref: '#/components/schemas/extendMenu'
        answerCMD:
          type: string
        answerCMDMsg:
          type: string
        notShowInRelativeQuestion:
          type: boolean
          default: false
        dimension:
          type: array
          items:
            type: string
        beginTime:
          $ref: '#/components/schemas/time'
        endTime:
          $ref: '#/components/schemas/time'
    similarQuestion:
      type: object
      properties:
        sqid:
          type: integer
        content:
          type: string
    category:
      type: object
      properties:
        categoryId:
          $ref: '#/components/schemas/categoryId'
        content:
          type: string
        parent:
          $ref: '#/components/schemas/categoryId'
        children:
          type: array
          description: a list of child category
          items:
            $ref: '#/components/schemas/category'
    extendMenu:
      type: string
  parameters:
    qid:
      name: qid
      in: path
      required: true
      description: question id
      schema:
        type: string
    user:
      name: user
      in: query
      description: user who does the operation
      schema:
        type: string
    sqid:
      name: sqid
      in: path
      required: true
      description: similar question id
      schema:
        type: string
    content:
      name: content
      in: query
      description: content body
      schema:
        type: string
    categoryId:
      name: categoryId
      in: path
      required: true
      description: category id
      schema:
        $ref: '#/components/schemas/categoryId'
paths:
  /RFQuestions:
    get:
      summary: Get RemoveFeedBack Questions
      responses:
        '200':
          description: an array of RFQuestion response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFQuestion'
        '500':
          description: internal server errror
    post:
      summary: Set RemoveFeedBack Questions
      parameters:
        - name: contents
          description: 要設定的標準問內容 
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: set successful
        '403':
          description: one of the id already setted
        '404':
          description: can not find the input id
  # temp deprecated this api
  # /RFQuestions/search:
  #   get:
  #     summary: Search RFQuestion Base on condition
  #     description: |
  #       搜尋RFQuestions 最少必須要有category或是content其一, 若
  #     parameters:
  #       - name: categoryID
  #         in: query
  #         description: 尋找該類別底下的所有RFQuestion
  #         schema:
  #           type: integer
  #       - name: content
  #         in: query
  #         description: 尋找exactly match 內容的 RFQuestion
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: an array of RFQuestion response
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                   $ref: '#/components/schemas/RFQuestion'
  #       '400':
  #         description: need parameters
  #       '404':
  #         description: RFQuestion Not Found
  /questions:
    get:
      tags:
        - questions
      summary: get questions by given condition
      parameters:
        - name: beginTime
          in: query
          description: begin of search duration
          schema:
            $ref: '#/components/schemas/time'
        - name: endTime
          in: query
          description: end of search duration
          schema:
            $ref: '#/components/schemas/time'
        - name: keyword
          in: query
          description: keyword
          schema:
            type: string
        - name: relativeQuestion
          in: query
          description: question should have relative questions or not
          schema:
            type: boolean
            default: false
        - name: dynamicMenu
          in: query
          description: question should have dynamic menu or not
          schema:
            type: boolean
            default: false
        - name: notShowInRecommand
          in: query
          description: question should not in recommand or not
          schema:
            type: boolean
            default: false
        - name: categoryId
          in: query
          description: questions under which category
          schema:
            $ref: '#/components/schemas/categoryId'
        - name: row
          in: query
          description: the number of questions to return at one query
          schema:
            type: integer
            default: 10
        - name: startPage
          description: start fetching page of this query
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: a list of questions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/question'
  /questions/search:
    get:
      tags:
        - question
      summary: 搜寻标准问
      parameters:
        - name: content
          in: query
          schema:
            type: string
      responses:
        '200':
          description: a question
          content:
            application/json:
              schema:
                type: object
                properties:
                  questionId:
                    type: integer
                  content:
                    type: string
                  categoryId:
                    type: integer
        '404':
          description: question content does not match any question
  '/question/{qid}':
    get:
      tags:
        - question
      summary: get a question
      parameters:
        - $ref: '#/components/parameters/qid'
      responses:
        '200':
          description: a question
          content:
            application/json:
              schema:
                type: object
                description: question
                properties:
                  categoryId:
                    type: integer
                  categoryName:
                    type: string
                  content:
                    type: string
                  questionId:
                    type: integer
                  similarQuestions:
                    type: array
                  answers:
                    type: array
                    items:
                      $ref: '#/components/schemas/answer'
        '404':
          description: the question does not exist
    post:
      tags:
        - question
      summary: add/update a new question
      parameters:
        - name: categoryId
          in: query
          description: question should put under which category
          schema:
            $ref: '#/components/schemas/categoryId'
        - $ref: '#/components/parameters/content'
        - name: similarQuestionCount
          in: query
          description: number of similar questions of the question
          schema:
            type: integer
            default: 0
        - name: answers
          in: query
          description: answers of the question
          schema:
            type: array
            items:
              $ref: '#/components/schemas/answer'
        - $ref: '#/components/parameters/user'
      responses:
        '200':
          description: a question is created/updated
        '500':
          description: 'an error occurred, the operation failed'
    delete:
      tags:
        - question
      summary: delete a question
      parameters:
        - $ref: '#/components/parameters/qid'
      responses:
        '200':
          description: a question is deleted
        '404':
          description: the question does not exist
        '500':
          description: 'an error occurred, the operation failed'
  '/question/{qid}/similar-questions':
    get:
      tags:
        - question
      summary: get simiar questions of a question
      parameters:
        - $ref: '#/components/parameters/qid'
      responses:
        '200':
          description: a list of simiar question of the target question
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/similarQuestion'
        '404':
          description: the question does not exist
        '500':
          description: 'an error occurred, the operation failed'
    post:
      tags:
        - question
      summary: update similar questions of a question
      parameters:
        - $ref: '#/components/parameters/qid'
        - $ref: '#/components/parameters/user'
        - name: similarQuestions
          in: query
          description: array of new similar questions
          schema:
            type: array
            items:
              $ref: '#/components/schemas/similarQuestion'
      responses:
        '200':
          description: update similar questions success
        '404':
          description: the question does not exist
        '500':
          description: 'an error occurred, the operation failed'
    delete:
      tags:
        - question
      summary: delete all similar questions of a question
      parameters:
        - $ref: '#/components/parameters/qid'
      responses:
        '200':
          description: the similar questions are deleted
        '404':
          description: the question does not exist
        '500':
          description: 'an error occurred, the operation failed'
  '/question/{qid}/similar-question/{sqid}':
    get:
      tags:
        - question
      summary: get target similar question of indicated question
      parameters:
        - $ref: '#/components/parameters/qid'
        - $ref: '#/components/parameters/sqid'
      responses:
        '200':
          description: get the target similar question
          content:
            application/json:
              schema:
                $ref: '#components/schemas/similarQuestion'
        '404':
          description: the question does not exist or similar question does not exist
        '500':
          description: 'an error occurred, the operation failed'
    post:
      tags:
        - question
      summary: update a similar question of a question
      parameters:
        - $ref: '#/components/parameters/qid'
        - $ref: '#/components/parameters/sqid'
        - name: content
          in: query
          description: new content of the similar question
          schema:
            type: string
      responses:
        '200':
          description: the similar question is updated
        '404':
          description: the question does not exist or similar question does not exist
        '500':
          description: 'an error occurred, the operation failed'
    delete:
      tags:
        - question
      summary: delete a similar question of a question
      parameters:
        - $ref: '#/components/parameters/qid'
        - $ref: '#/components/parameters/sqid'
      responses:
        '200':
          description: the similar question is deleted
        '404':
          description: the question does not exist or similar question does not exist
        '500':
          description: 'an error occurred, the operation failed'
  /categories:
    get:
      tags:
        - category
      summary: get all categories
      responses:
        '200':
          description: category trees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category'
        '500':
          description: 'an error occurred, the operation failed'
  /category:
    put:
      tags:
        - category
      summary: add a category
      parameters:
        - $ref: '#/components/parameters/content'
        - name: parent
          in: query
          schema:
            type: integer
        - $ref: '#/components/parameters/user'
      responses:
        '200':
          description: a new category tree
  '/category/{categoryId}':
    get:
      tags:
        - category
      summary: get a category tree
      parameters:
        - $ref: '#/components/parameters/categoryId'
      responses:
        '200':
          description: get a ccategory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
        '404':
          description: the category does not exist
        '500':
          description: 'an error occurred, the operation failed'
    delete:
      tags:
        - category
      summary: delete a category tree
      parameters:
        - $ref: '#/components/parameters/categoryId'
      responses:
        '200':
          description: delete a ccategory
        '404':
          description: the category does not exist
        '500':
          description: 'an error occurred, the operation failed'
    post:
      tags:
        - category
      summary: update a category tree (only support rename in v1)
      parameters:
        - $ref: '#/components/parameters/categoryId'
        - $ref: '#/components/parameters/content'
      responses:
        '200':
          description: update a category  content success
        '404':
          description: the category does not exist
        '500':
          description: 'an error occurred, the operation failed'
  /category/{categoryId}/questions:
    get:
      tags:
        - category
      summary: Get questions under category ID
      description: 取得該分類下的所有問題, 加上參數includeSubCat取得包含子分類的所有問題
      parameters:
        - $ref: '#/components/parameters/categoryId'
        - name: includeSubCat
          in: query
          schema:
            type: boolean
            description: 加上該參數會取得包含子分類的所有問題
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    questionId:
                      type: integer
                    content:
                      type: string
                    categoryId:
                      type: integer
  /qa/questions/operations:
    get:
      tags:
        - operations
      summary: 取得最近num笔的该使用者问答库行为记录
      operationId: getOperations
      parameters:
        - name: num
          in: query
          schema:
            type: integer
          required: true
          description: 取得最多num笔行为记录
        - name: UserID
          in: query
          schema:
            type: string
            description: '使用者ID, 若无则为所有使用者'
        - name: status
          in: query
          schema:
            type: string
            enum:
              - success
              - fail
              - running
            description: 状态，若无则为所有状态
        - name: action
          in: query
          schema:
            type: string
            enum:
              - full_import
              - incre_import
              - export
          description: 行为种类，若无则为所有种类
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    description: 使用者最近n天的行为纪录(从新到旧排序）
                    items:
                      type: object
                      properties:
                        state_id:
                          description: 行为id
                          type: integer
                        action:
                          description: 行为的模式(全量、批量导入、全量导出）
                          type: string
                          enum:
                            - full_import
                            - incr_import
                            - export
                        status:
                          description: 行为的状态(成功、失败、运行中）
                          type: string
                          enum:
                            - success
                            - fail
                            - running
                        created_time:
                          type: integer
                          description: 行为时间 (Unix Mill Sec)
                        updated_time:
                          type: integer
                          description: 行为最后更新时间(Unix Mill Sec)
                        extra_info:
                          description: '行为额外讯息(ex:导入失败的错误讯息）'
                          type: string
  '/qa/questions/operations/{id}/progress':
    get:
      tags:
        - operations
      summary: 查询汇入汇出进度
      description: 查询
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: '使用汇入汇出API成功时所取得的唯一id来查询目前进度, 若无则可使用/qa/questions/operations API取得该ID'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  state_id:
                    type: string
                    description: 传入的查询ID
                  status:
                    type: string
                    enum:
                      - running
                      - fail
                      - success
                    description: 任务执行状态
                  created_time:
                    type: integer
                    description: 上传/下载开始时间(Unix Mill Sec)
                  extra_info:
                    type: string
                    description: '行为额外讯息(ex:导入失败的错误讯息）'
        '404':
          description: cant found the operation in DB
  /qa/questions/operations/{id}/download:
    get:
      tags:
        - operations
      summary: 取得档案
      description: 查询
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: '使用汇入汇出API成功时所取得的唯一id来查询目前进度, 若无则可使用/qa/questions/operations API取得该ID'
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: Operation not found
        '500':
          description: Server internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: error message
        '503':
          description: Operation still running, service not available.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string 
                    description: error message
  /qa/questions/operations/import:
    post:
      tags:
        - operations
      summary: import questions
      description: '汇入xlsx格式的资料档案, 会锁定问答库汇入汇出'
      operationId: importQuestions
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                mode:
                  description: 增量或全量导入
                  type: string
                  enum:
                    - incre
                    - full
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  state_id:
                    type: string
                    description: ID for querying progress
        '400':
          description: 'parameters error, 可能是档案副档名错误或是模式参数非规定项目'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: error message
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: error message
        '503':
          description: 'Lock Error, Multicustomer 无法取得汇入权限'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: error message
                  userID:
                    type: string
                    description: user who are using the lock right now
                  action:
                    type: string
                    description: action name
                    enum:
                      - full_import
                      - incr_import
                      - export
  /qa/questions/operations/export:
    post:
      tags:
        - operations
      summary: export currrent questions
      description: 'Exporting all the questions, will lock questions operation'
      operationId: exportQuestions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  state_id:
                    type: string
                    description: 传入的查询ID
                  created_time:
                    type: string
                    format: date
                    description: 上传开始时间
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: error message
                  userID:
                    type: string
                    description: user who are using the lock right now
        '503':
          description: System cant get the lock until timeout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: error message
                  userID:
                    type: string
                    description: user who are using the lock right now
    